---
// WaterPurifierLoader.astro
---

<div class="purifier-loader-wrapper" id="purifierLoader">
  <!-- Simplified Background Animation -->
  <div class="bg-animation">
    <div class="bubble" style="--delay: 0s; --size: 8px; --left: 15%;"></div>     
    <div class="bubble" style="--delay: 3s; --size: 12px; --left: 75%;"></div>
    <div class="bubble" style="--delay: 6s; --size: 6px; --left: 45%;"></div>
  </div>

  <div class="purifier-container">
    <!-- Brand Header -->
    <div class="brand-section">
      <div class="logo-wrapper">
        <div class="water-drop">
          <div class="drop-inner"></div>
        </div>
      </div>
      <h1 class="company-name">Pioneer Agencies</h1>
      <p class="company-tagline">Your journey to cleaner, safer water begins here</p>
    </div>

    <!-- Main Purification System -->
    <div class="purify-system">
      <!-- Input Pipe -->
      <div class="pipe-container input-section">
        <div class="pipe-main">
          <div class="water-flow dirty-flow">
            <div class="flow-particle dirty-particle"></div>
            <div class="flow-particle dirty-particle"></div>
            <div class="impurity-dot"></div>
          </div>
        </div>
        <div class="pipe-title">Contaminated Water</div>
      </div>

      <!-- Filter Chamber -->
      <div class="filter-unit">
        <div class="chamber-main">
          <div class="filter-layer layer-1">
            <div class="layer-media"></div>
            <div class="clean-sweep"></div>
          </div>
          <div class="filter-layer layer-2">
            <div class="layer-media"></div>
            <div class="clean-sweep"></div>
          </div>
          <div class="filter-layer layer-3">
            <div class="layer-media"></div>
            <div class="clean-sweep"></div>
          </div>
          <div class="filter-layer layer-4">
            <div class="layer-media"></div>
            <div class="clean-sweep"></div>
          </div>
        </div>
        <div class="status-light">
          <div class="light-dot"></div>
          <span>Purifying</span>
        </div>
      </div>

      <!-- Output Pipe -->
      <div class="pipe-container output-section">
        <div class="pipe-main">
          <div class="water-flow clean-flow">
            <div class="flow-particle clean-particle"></div>
            <div class="flow-particle clean-particle"></div>
            <div class="shine-dot"></div>
          </div>
        </div>
        <div class="pipe-title">Pure Water</div>
      </div>
    </div>

    <!-- Performance Metrics -->
    <div class="stats-grid">
      <div class="stat-item">
        <div class="stat-number" data-target="99.9">0</div>
        <div class="stat-text">% Purity</div>
      </div>
      <div class="stat-item">
        <div class="stat-number" data-target="15">0</div>
        <div class="stat-text">L/min Flow</div>
      </div>
      <div class="stat-item">
        <div class="stat-number" data-target="7">0</div>
        <div class="stat-text">pH Level</div>
      </div>
    </div>

    <!-- Loading Progress -->
    <div class="progress-section">
      <div class="progress-wrapper">
        <div class="progress-line">
          <div class="progress-fill"></div>
        </div>
        <div class="progress-info">
          <span class="status-text">Initializing Purification System</span>
          <span class="percent-text">0%</span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  :root {
    --primary-blue: #0066cc;
    --accent-cyan: #00d4ff;
    --success-green: #00ff88;
    --dark-bg: #0a0a0a;
    --darker-bg: #1a1a2e;
    --light-text: #f8f9fa;
    --gray-text: #6c757d;
    --dirty-brown: #8b4513;
    --clean-blue: #00d4ff;
    --white: #ffffff;
  }

  .purifier-loader-wrapper {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: linear-gradient(135deg, var(--dark-bg) 0%, var(--darker-bg) 50%, #16213e 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10000;
    font-family: 'Poppins', -apple-system, BlinkMacSystemFont, sans-serif;
  }

  /* Optimized Background Animation - Reduced particles */
  .bg-animation {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
  }

  .bubble {
    position: absolute;
    bottom: -50px;
    width: var(--size);
    height: var(--size);
    background: radial-gradient(circle, var(--accent-cyan) 0%, transparent 70%);
    border-radius: 50%;
    opacity: 0.1;
    left: var(--left);
    animation: bubbleUp 15s infinite linear;
    animation-delay: var(--delay);
    will-change: transform;
  }

  @keyframes bubbleUp {
    0% {
      transform: translateY(0) scale(0);
      opacity: 0;
    }
    10% {
      opacity: 0.2;
    }
    90% {
      opacity: 0.1;
    }
    100% {
      transform: translateY(-110vh) scale(1);
      opacity: 0;
    }
  }

  .purifier-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    padding: 1rem;
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 900px;
  }

  /* Brand Section - Optimized */
  .brand-section {
    text-align: center;
    margin-bottom: 0.5rem;
  }

  .logo-wrapper {
    margin-bottom: 1rem;
  }

  .water-drop {
    width: 50px;
    height: 50px;
    position: relative;
    margin: 0 auto;
  }

  .drop-inner {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, var(--primary-blue) 0%, var(--accent-cyan) 100%);
    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    animation: dropBeat 4s ease-in-out infinite;
    will-change: transform;
  }

  .company-name {
    font-size: 2rem;
    font-weight: 700;
    background: linear-gradient(135deg, var(--primary-blue) 0%, var(--accent-cyan) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.5rem;
    letter-spacing: -0.02em;
  }

  .company-tagline {
    color: var(--gray-text);
    font-size: 0.8rem;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  @keyframes dropBeat {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.08); }
  }

  /* Optimized Purification System */
  .purify-system {
    display: flex;
    align-items: center;
    gap: 0;
    width: 100%;
    max-width: 700px;
    position: relative;
    justify-content: center;
  }

  .pipe-container {
    position: relative;
    z-index: 2;
  }

  .pipe-main {
    width: 180px;
    height: 35px;
    background: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);
    border-radius: 18px;
    position: relative;
    overflow: hidden;
    border: 2px solid #34495e;
    box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.3);
  }

  .water-flow {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 18px;
    transform: translateY(-50%);
    overflow: hidden;
  }

  .flow-particle {
    position: absolute;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    animation: flowMove 2.5s infinite linear;
    will-change: transform;
  }

  .dirty-particle {
    background: var(--dirty-brown);
    box-shadow: 0 0 3px rgba(139, 69, 19, 0.5);
  }

  .clean-particle {
    background: var(--clean-blue);
    box-shadow: 0 0 6px rgba(0, 212, 255, 0.8);
  }

  .flow-particle:nth-child(1) { top: 2px; animation-delay: 0s; }
  .flow-particle:nth-child(2) { top: 8px; animation-delay: 0.4s; }

  .impurity-dot {
    position: absolute;
    width: 3px;
    height: 3px;
    background: #654321;
    border-radius: 50%;
    top: 6px;
    animation: flowMove 3s infinite linear;
    animation-delay: 0.2s;
    will-change: transform;
  }

  .shine-dot {
    position: absolute;
    width: 2px;
    height: 2px;
    background: var(--white);
    border-radius: 50%;
    top: 5px;
    animation: shineMove 2s infinite linear;
    will-change: transform;
  }

  @keyframes flowMove {
    0% { left: -15px; opacity: 0; }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { left: 195px; opacity: 0; }
  }

  @keyframes shineMove {
    0% { left: -8px; opacity: 0; transform: scale(0); }
    20% { opacity: 1; transform: scale(1); }
    80% { opacity: 1; transform: scale(1); }
    100% { left: 188px; opacity: 0; transform: scale(0); }
  }

  .pipe-title {
    position: absolute;
    top: -25px;
    left: 50%;
    transform: translateX(-50%);
    color: var(--light-text);
    font-size: 0.7rem;
    font-weight: 500;
    text-align: center;
    white-space: nowrap;
  }

  /* Optimized Filter Chamber */
  .filter-unit {
    position: relative;
    margin: 0 -15px;
    z-index: 3;
  }

  .chamber-main {
    width: 100px;
    height: 120px;
    background: linear-gradient(180deg, #1e3c72 0%, #2a5298 100%);
    border-radius: 12px;
    position: relative;
    overflow: hidden;
    border: 2px solid var(--primary-blue);
    box-shadow: 0 0 20px rgba(0, 102, 204, 0.3);
  }

  .filter-layer {
    width: 100%;
    height: 25%;
    position: relative;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    overflow: hidden;
  }

  .filter-layer:last-child {
    border-bottom: none;
  }

  .layer-media {
    width: 100%;
    height: 100%;
    position: relative;
  }

  .layer-1 .layer-media { background: linear-gradient(90deg, #666 0%, #999 100%); }
  .layer-2 .layer-media { background: linear-gradient(90deg, #444 0%, #777 100%); }
  .layer-3 .layer-media { background: linear-gradient(90deg, #222 0%, #555 100%); }
  .layer-4 .layer-media { background: linear-gradient(90deg, #000 0%, #333 100%); }

  .clean-sweep {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent 0%, rgba(0, 212, 255, 0.5) 50%, transparent 100%);
    animation: sweepClean 5s infinite ease-in-out;
    will-change: transform;
  }

  .layer-1 .clean-sweep { animation-delay: 0s; }
  .layer-2 .clean-sweep { animation-delay: 0.6s; }
  .layer-3 .clean-sweep { animation-delay: 1.2s; }
  .layer-4 .clean-sweep { animation-delay: 1.8s; }

  @keyframes sweepClean {
    0%, 30% { left: -100%; }
    50% { left: 0%; }
    70%, 100% { left: 100%; }
  }

  .status-light {
    position: absolute;
    top: -35px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    gap: 0.4rem;
    color: var(--accent-cyan);
    font-size: 0.75rem;
    font-weight: 500;
  }

  .light-dot {
    width: 6px;
    height: 6px;
    background: var(--accent-cyan);
    border-radius: 50%;
    animation: lightBlink 1.5s ease-in-out infinite;
    will-change: opacity;
  }

  @keyframes lightBlink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.3; }
  }

  /* Optimized Stats Grid */
  .stats-grid {
    display: flex;
    gap: 2rem;
    margin-top: 1rem;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    font-size: 1.6rem;
    font-weight: 700;
    color: var(--accent-cyan);
    margin-bottom: 0.25rem;
    font-variant-numeric: tabular-nums;
  }

  .stat-text {
    font-size: 0.7rem;
    color: var(--gray-text);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  /* Optimized Progress Section */
  .progress-section {
    width: 100%;
    max-width: 350px;
  }

  .progress-wrapper {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }

  .progress-line {
    width: 100%;
    height: 5px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
    overflow: hidden;
    position: relative;
  }

  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--primary-blue) 0%, var(--accent-cyan) 100%);
    border-radius: 3px;
    width: 0%;
    transition: width 0.3s ease;
    box-shadow: 0 0 8px rgba(0, 212, 255, 0.4);
    will-change: width;
  }

  .progress-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .status-text {
    color: var(--light-text);
    font-size: 0.85rem;
    font-weight: 400;
  }

  .percent-text {
    color: var(--accent-cyan);
    font-size: 0.85rem;
    font-weight: 600;
    font-variant-numeric: tabular-nums;
  }

  /* Mobile Optimizations */
  @media (max-width: 768px) {
    .purifier-container {
      gap: 1.5rem;
      padding: 0.8rem;
    }

    .company-name {
      font-size: 1.8rem;
    }

    .purify-system {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
      max-width: 100%;
    }

    .pipe-main {
      width: 150px;
      height: 30px;
    }

    .chamber-main {
      width: 85px;
      height: 100px;
    }

    .stats-grid {
      gap: 1.5rem;
    }

    .stat-number {
      font-size: 1.3rem;
    }

    /* Reduce animations on mobile */
    .bubble {
      animation-duration: 20s;
    }

    .clean-sweep {
      animation-duration: 6s;
    }
  }

  @media (max-width: 480px) {
    .purifier-container {
      gap: 1.2rem;
      padding: 0.6rem;
    }

    .company-name {
      font-size: 1.5rem;
    }

    .company-tagline {
      font-size: 0.7rem;
    }

    .pipe-main {
      width: 130px;
      height: 25px;
    }

    .chamber-main {
      width: 70px;
      height: 85px;
    }

    .stats-grid {
      gap: 1.2rem;
    }

    .stat-number {
      font-size: 1.1rem;
    }

    .stat-text {
      font-size: 0.65rem;
    }

    .pipe-title {
      font-size: 0.65rem;
      top: -22px;
    }

    .status-light {
      font-size: 0.7rem;
      top: -30px;
    }

    /* Further reduce animations on small screens */
    .bubble {
      animation-duration: 25s;
    }
  }

  /* Performance optimizations */
  @media (prefers-reduced-motion: reduce) {
    .bubble,
    .drop-inner,
    .flow-particle,
    .impurity-dot,
    .shine-dot,
    .clean-sweep,
    .light-dot {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
    }
  }
</style>

<script>
  class OptimizedPurifierLoader {
    constructor() {
      this.progress = 0;
      this.targetProgress = 100;
      this.isActive = true;
      this.messages = [
        "Initializing Purification System",
        "Activating Multi-Stage Filters", 
        "Processing Water Quality",
        "Optimizing Flow Rate",
        "Finalizing Purification Process"
      ];
      this.currentMsg = 0;
      
      this.initialize();
    }

    initialize() {
      // Use requestAnimationFrame for better performance
      requestAnimationFrame(() => {
        this.animateProgress();
        this.animateStats();
        this.rotateMessages();
        this.scheduleHide();
      });
    }

    animateProgress() {
      const progressBar = document.querySelector('.progress-fill');
      const percentText = document.querySelector('.percent-text');
      
      if (!progressBar || !percentText) return;
      
      const updateProgress = () => {
        if (this.progress < this.targetProgress && this.isActive) {
          this.progress += Math.random() * 2.5 + 0.8;
          this.progress = Math.min(this.progress, this.targetProgress);
          
          progressBar.style.width = `${this.progress}%`;
          percentText.textContent = `${Math.floor(this.progress)}%`;
          
          requestAnimationFrame(updateProgress);
        }
      };
      
      setTimeout(() => requestAnimationFrame(updateProgress), 300);
    }

    animateStats() {
      const statNumbers = document.querySelectorAll('.stat-number');
      
      statNumbers.forEach((stat, index) => {
        const target = parseFloat(stat.dataset.target);
        let current = 0;
        
        const updateStat = () => {
          if (current < target && this.isActive) {
            const increment = target / 40;
            current += increment;
            current = Math.min(current, target);
            
            if (index === 0) {
              stat.textContent = current.toFixed(1);
            } else {
              stat.textContent = Math.floor(current);
            }
            
            requestAnimationFrame(updateStat);
          }
        };
        
        setTimeout(() => requestAnimationFrame(updateStat), 800 + index * 400);
      });
    }

    rotateMessages() {
      const statusText = document.querySelector('.status-text');
      if (!statusText) return;
      
      const changeMessage = () => {
        if (this.isActive) {
          statusText.style.opacity = '0';
          
          setTimeout(() => {
            this.currentMsg = (this.currentMsg + 1) % this.messages.length;
            statusText.textContent = this.messages[this.currentMsg];
            statusText.style.opacity = '1';
          }, 200);
          
          setTimeout(changeMessage, 1800);
        }
      };
      
      setTimeout(changeMessage, 1500);
    }

    scheduleHide() {
      setTimeout(() => {
        this.hideLoader();
      }, 5500);
    }

    hideLoader() {
      this.isActive = false;
      const loader = document.getElementById('purifierLoader');
      
      if (loader) {
        loader.style.opacity = '0';
        loader.style.transition = 'opacity 0.6s ease-out';
        
        setTimeout(() => {
          loader.style.display = 'none';
          // Clean up for memory
          loader.remove();
        }, 600);
      }
    }
  }

  // Initialize with better error handling
  function initPurifierLoader() {
    try {
      const loader = new OptimizedPurifierLoader();
      // Export for manual control
      window.hidePurifierLoader = () => loader.hideLoader();
    } catch (error) {
      console.warn('Purifier loader initialization failed:', error);
    }
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initPurifierLoader);
  } else {
    initPurifierLoader();
  }
</script>